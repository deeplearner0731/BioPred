ttest.pval = pval.t, Median.Diff = median.diff,
Group0.N = group0.N, Group0.Mean = group0.mean,
Group0.Mean.Lo = group0.lower, Group0.Mean.Up = group0.upper,
Group0.Median = group0.median,
Group1.N = group1.N, Group1.Mean = group1.mean,
Group1.Mean.Lo = group1.lower, Group1.Mean.Up = group1.upper,
Group1.Median = group1.median))
}
data=demo_data
Cutoff <- NULL
Mean <- NULL
Group <- NULL
Mean.Lo <- NULL
Mean.Up <- NULL
data <- data[, c(xvar, yvar)]
data <- data[stats::complete.cases(data),]
row.names(data)=NULL
cutoffs=c(-0.1,-0.3,-0.5,0.1,0.3,0.5)
if ("Group" %in% names(data)) stop("xvar and yvar should not have the name of Group.")
if (!dir %in% c(">", "<", ">=", "<=")) stop("dir should be >, <, >=, or <=")
cutoffs <- sort(unique(cutoffs))
stat <- NULL
for (i in seq_along(cutoffs)) {
if (dir == ">") {
data$Group <- (data[, xvar] > cutoffs[i]) * 1
} else if (dir == ">=") {
data$Group <- (data[, xvar] >= cutoffs[i]) * 1
} else if (dir == "<") {
data$Group <- (data[, xvar] < cutoffs[i]) * 1
} else if (dir == "<=") {
data$Group <- (data[, xvar] <= cutoffs[i]) * 1
}
fml <- stats::as.formula(paste(yvar, "~ Group"))
ttest <- try(stats::t.test(fml, data = data, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95), silent = TRUE)
if (!inherits(ttest, "try-error")) {
pval.t <- ttest$p.value
mean.diff.lo <- ttest$conf.int[1]
mean.diff.up <- ttest$conf.int[2]
} else {
pval.t <- NA
mean.diff.lo <- NA
mean.diff.up <- NA
}
group0 <- data[data$Group == 0, ]
group1 <- data[data$Group == 1, ]
group0.N <- nrow(group0)
group1.N <- nrow(group1)
group0.t <- try(stats::t.test(group0[, yvar], alternative = "two.sided", mu = 0, conf.level = 0.95), silent = TRUE)
group1.t <- try(stats::t.test(group1[, yvar], alternative = "two.sided", mu = 0, conf.level = 0.95), silent = TRUE)
if (!inherits(group0.t, "try-error")) {
group0.mean <- unname(group0.t$estimate)
group0.lower <- group0.t$conf.int[1]
group0.upper <- group0.t$conf.int[2]
group0.median <- stats::median(group0[, yvar])
} else {
group0.mean <- mean(group0[, yvar], na.rm = TRUE)
group0.lower <- NA
group0.upper <- NA
group0.median <- stats::median(group0[, yvar], na.rm = TRUE)
}
if (!inherits(group1.t, "try-error")) {
group1.mean <- unname(group1.t$estimate)
group1.lower <- group1.t$conf.int[1]
group1.upper <- group1.t$conf.int[2]
group1.median <- stats::median(group1[, yvar])
} else {
group1.mean <- mean(group1[, yvar], na.rm = TRUE)
group1.lower <- NA
group1.upper <- NA
group1.median <- stats::median(group1[, yvar], na.rm = TRUE)
}
mean.diff <- group0.mean - group1.mean
median.diff <- group0.median - group1.median
stat <- rbind(stat, data.frame(Response = yvar.display, Predictor = xvar.display,
Direction = dir, Cutoff = cutoffs[i], Mean.Diff = mean.diff,
Mean.Diff.Lo = mean.diff.lo, Mean.Diff.Up = mean.diff.up,
ttest.pval = pval.t, Median.Diff = median.diff,
Group0.N = group0.N, Group0.Mean = group0.mean,
Group0.Mean.Lo = group0.lower, Group0.Mean.Up = group0.upper,
Group0.Median = group0.median,
Group1.N = group1.N, Group1.Mean = group1.mean,
Group1.Mean.Lo = group1.lower, Group1.Mean.Up = group1.upper,
Group1.Median = group1.median))
}
method="t.test"
stat.display <- stat
stat.display <- stat.display[, c("Response", "Predictor", "Direction", "Cutoff", "Group0.N", "Group1.N",
"Median.Diff", "Mean.Diff", "Mean.Diff.Lo", "Mean.Diff.Up", "ttest.pval")]
temp <- stat.display[, c("Median.Diff", "Mean.Diff", "Mean.Diff.Lo", "Mean.Diff.Up")]
stat.display[, c("Median.Diff", "Mean.Diff", "Mean.Diff.Lo", "Mean.Diff.Up")] <- round(temp, digits = 2)
stat.display$ttest.pval <- round(stat.display$ttest.pval, digits = 4)
stat.display$Mean.Diff.CI <- paste(stat.display$Mean.Diff, " (", stat.display$Mean.Diff.Lo, " , ",
stat.display$Mean.Diff.Up, ")", sep = "")
stat.display <- stat.display[, c("Response", "Predictor", "Direction", "Cutoff", "Group0.N", "Group1.N",
"Median.Diff", "Mean.Diff.CI", "ttest.pval")]
if (method == "t.test") {
stat.sel <- stat[which.min(stat$ttest.pval), ]
stat.sel.display <- stat.display[which.min(stat$ttest.pval), ]
}
cut.sel <- stat.sel$Cutoff
rownames(stat.sel) = NULL
rownames(stat.sel.display) = NULL
rownames(stat.display) = NULL
if (dir == "<") {
dir.else <- ">="
} else if (dir == "<=") {
dir.else <- ">"
} else if (dir == ">") {
dir.else <- "<="
} else if (dir == ">=") {
dir.else <- "<"
}
group0.res <- stat.sel[, c("Response", "Group0.N", "Group0.Mean", "Group0.Mean.Lo", "Group0.Mean.Up", "Group0.Median")]
group1.res <- stat.sel[, c("Response", "Group1.N", "Group1.Mean", "Group1.Mean.Lo", "Group1.Mean.Up", "Group1.Median")]
colnames(group0.res) <- c("Response", "N", "Mean", "Mean.Lo", "Mean.Up", "Median")
colnames(group1.res) <- c("Response", "N", "Mean", "Mean.Lo", "Mean.Up", "Median")
group.res <- rbind(group0.res, group1.res)
rownames(group.res) <- c(paste(xvar.display, dir.else, cut.sel), paste(xvar.display, dir, cut.sel))
data.plot0 <- stat[, c("Cutoff", "Group0.Mean", "Group0.Mean.Lo", "Group0.Mean.Up")]
data.plot0$Group <- paste(dir.else, "Cutoff")
colnames(data.plot0) <- c("Cutoff", "Mean", "Mean.Lo", "Mean.Up", "Group")
data.plot1 <- stat[, c("Cutoff", "Group1.Mean", "Group1.Mean.Lo", "Group1.Mean.Up")]
data.plot1$Group <- paste(dir, "Cutoff")
colnames(data.plot1) <- c("Cutoff", "Mean", "Mean.Lo", "Mean.Up", "Group")
colnames(group0.res) <- c("Response", "N", "Mean", "Mean.Lo", "Mean.Up", "Median")
colnames(group1.res) <- c("Response", "N", "Mean", "Mean.Lo", "Mean.Up", "Median")
group.res <- rbind(group0.res, group1.res)
rownames(group.res)
View(group0.res)
View(stat)
cutoffs=c(-0.1,-0.3,-0.5,0.1,0.3,0.5)
if ("Group" %in% names(data)) stop("xvar and yvar should not have the name of Group.")
if (!dir %in% c(">", "<", ">=", "<=")) stop("dir should be >, <, >=, or <=")
cutoffs <- sort(unique(cutoffs))
stat <- NULL
for (i in seq_along(cutoffs)) {
if (dir == ">") {
data$Group <- (data[, xvar] > cutoffs[i]) * 1
} else if (dir == ">=") {
data$Group <- (data[, xvar] >= cutoffs[i]) * 1
} else if (dir == "<") {
data$Group <- (data[, xvar] < cutoffs[i]) * 1
} else if (dir == "<=") {
data$Group <- (data[, xvar] <= cutoffs[i]) * 1
}
fml <- stats::as.formula(paste(yvar, "~ Group"))
ttest <- try(stats::t.test(fml, data = data, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95), silent = TRUE)
if (!inherits(ttest, "try-error")) {
pval.t <- ttest$p.value
mean.diff.lo <- ttest$conf.int[1]
mean.diff.up <- ttest$conf.int[2]
} else {
pval.t <- NA
mean.diff.lo <- NA
mean.diff.up <- NA
}
group0 <- data[data$Group == 0, ]
group1 <- data[data$Group == 1, ]
group0.N <- nrow(group0)
group1.N <- nrow(group1)
group0.t <- try(stats::t.test(group0[, yvar], alternative = "two.sided", mu = 0, conf.level = 0.95), silent = TRUE)
group1.t <- try(stats::t.test(group1[, yvar], alternative = "two.sided", mu = 0, conf.level = 0.95), silent = TRUE)
if (!inherits(group0.t, "try-error")) {
group0.mean <- unname(group0.t$estimate)
group0.lower <- group0.t$conf.int[1]
group0.upper <- group0.t$conf.int[2]
group0.median <- stats::median(group0[, yvar])
} else {
group0.mean <- mean(group0[, yvar], na.rm = TRUE)
group0.lower <- NA
group0.upper <- NA
group0.median <- stats::median(group0[, yvar], na.rm = TRUE)
}
if (!inherits(group1.t, "try-error")) {
group1.mean <- unname(group1.t$estimate)
group1.lower <- group1.t$conf.int[1]
group1.upper <- group1.t$conf.int[2]
group1.median <- stats::median(group1[, yvar])
} else {
group1.mean <- mean(group1[, yvar], na.rm = TRUE)
group1.lower <- NA
group1.upper <- NA
group1.median <- stats::median(group1[, yvar], na.rm = TRUE)
}
mean.diff <- group0.mean - group1.mean
median.diff <- group0.median - group1.median
stat <- rbind(stat, data.frame(Response = yvar.display, Predictor = xvar.display,
Direction = dir, Cutoff = cutoffs[i], Mean.Diff = mean.diff,
Mean.Diff.Lo = mean.diff.lo, Mean.Diff.Up = mean.diff.up,
ttest.pval = pval.t, Median.Diff = median.diff,
Group0.N = group0.N, Group0.Mean = group0.mean,
Group0.Mean.Lo = group0.lower, Group0.Mean.Up = group0.upper,
Group0.Median = group0.median,
Group1.N = group1.N, Group1.Mean = group1.mean,
Group1.Mean.Lo = group1.lower, Group1.Mean.Up = group1.upper,
Group1.Median = group1.median))
}
method="t.test"
View(group0)
View(stat)
stat.display <- stat
stat.display <- stat.display[, c("Response", "Predictor", "Direction", "Cutoff", "Group0.N", "Group1.N",
"Median.Diff", "Mean.Diff", "Mean.Diff.Lo", "Mean.Diff.Up", "ttest.pval")]
temp <- stat.display[, c("Median.Diff", "Mean.Diff", "Mean.Diff.Lo", "Mean.Diff.Up")]
stat.display[, c("Median.Diff", "Mean.Diff", "Mean.Diff.Lo", "Mean.Diff.Up")] <- round(temp, digits = 2)
stat.display$ttest.pval <- round(stat.display$ttest.pval, digits = 4)
stat.display$Mean.Diff.CI <- paste(stat.display$Mean.Diff, " (", stat.display$Mean.Diff.Lo, " , ",
stat.display$Mean.Diff.Up, ")", sep = "")
stat.display <- stat.display[, c("Response", "Predictor", "Direction", "Cutoff", "Group0.N", "Group1.N",
"Median.Diff", "Mean.Diff.CI", "ttest.pval")]
View(stat.display)
if (method == "t.test") {
stat.sel <- stat[which.min(stat$ttest.pval), ]
stat.sel.display <- stat.display[which.min(stat$ttest.pval), ]
}
cut.sel <- stat.sel$Cutoff
rownames(stat.sel) = NULL
rownames(stat.sel.display) = NULL
rownames(stat.display) = NULL
View(stat.display)
stat$ttest.pval
View(stat)
View(group0.t)
View(group1.t)
ttest
ttest$p.value
cutoffs=c(-0.1,-0.3,-0.5,0.1,0.3,0.5)
if ("Group" %in% names(data)) stop("xvar and yvar should not have the name of Group.")
if (!dir %in% c(">", "<", ">=", "<=")) stop("dir should be >, <, >=, or <=")
cutoffs <- sort(unique(cutoffs))
stat <- NULL
fml <- stats::as.formula(paste(yvar, "~ Group"))
ttest <- try(stats::t.test(fml, data = data, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95), silent = TRUE)
ttest
fml
View(data)
if (!inherits(ttest, "try-error")) {
print('yes')
pval.t <- ttest$p.value
mean.diff.lo <- ttest$conf.int[1]
mean.diff.up <- ttest$conf.int[2]
} else {
print('no')
pval.t <- NA
mean.diff.lo <- NA
mean.diff.up <- NA
}
group0.t <- try(stats::t.test(group0[, yvar], alternative = "two.sided", mu = 0, conf.level = 0.95), silent = TRUE)
group1.t <- try(stats::t.test(group1[, yvar], alternative = "two.sided", mu = 0, conf.level = 0.95), silent = TRUE)
View(group0.t)
yvar.display='y.con'
xvar.display='biomarker x2'
yvar='y.con'
xvar="x2"
dir=">"
data=demo_data
Cutoff <- NULL
Mean <- NULL
Group <- NULL
Mean.Lo <- NULL
Mean.Up <- NULL
data <- data[, c(xvar, yvar)]
data <- data[stats::complete.cases(data),]
row.names(data)=NULL
cutoffs=c(-0.1,-0.3,-0.5,0.1,0.3,0.5)
if ("Group" %in% names(data)) stop("xvar and yvar should not have the name of Group.")
if (!dir %in% c(">", "<", ">=", "<=")) stop("dir should be >, <, >=, or <=")
cutoffs <- sort(unique(cutoffs))
stat <- NULL
for (i in seq_along(cutoffs)) {
if (dir == ">") {
data$Group <- (data[, xvar] > cutoffs[i]) * 1
} else if (dir == ">=") {
data$Group <- (data[, xvar] >= cutoffs[i]) * 1
} else if (dir == "<") {
data$Group <- (data[, xvar] < cutoffs[i]) * 1
} else if (dir == "<=") {
data$Group <- (data[, xvar] <= cutoffs[i]) * 1
}
fml <- stats::as.formula(paste(yvar, "~ Group"))
ttest <- try(stats::t.test(fml, data = data, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95), silent = TRUE)
if (!inherits(ttest, "try-error")) {
print('yes')
pval.t <- ttest$p.value
mean.diff.lo <- ttest$conf.int[1]
mean.diff.up <- ttest$conf.int[2]
} else {
print('no')
pval.t <- NA
mean.diff.lo <- NA
mean.diff.up <- NA
}
group0 <- data[data$Group == 0, ]
group1 <- data[data$Group == 1, ]
group0.N <- nrow(group0)
group1.N <- nrow(group1)
group0.t <- try(stats::t.test(group0[, yvar], alternative = "two.sided", mu = 0, conf.level = 0.95), silent = TRUE)
group1.t <- try(stats::t.test(group1[, yvar], alternative = "two.sided", mu = 0, conf.level = 0.95), silent = TRUE)
if (!inherits(group0.t, "try-error")) {
group0.mean <- unname(group0.t$estimate)
group0.lower <- group0.t$conf.int[1]
group0.upper <- group0.t$conf.int[2]
group0.median <- stats::median(group0[, yvar])
} else {
group0.mean <- mean(group0[, yvar], na.rm = TRUE)
group0.lower <- NA
group0.upper <- NA
group0.median <- stats::median(group0[, yvar], na.rm = TRUE)
}
if (!inherits(group1.t, "try-error")) {
group1.mean <- unname(group1.t$estimate)
group1.lower <- group1.t$conf.int[1]
group1.upper <- group1.t$conf.int[2]
group1.median <- stats::median(group1[, yvar])
} else {
group1.mean <- mean(group1[, yvar], na.rm = TRUE)
group1.lower <- NA
group1.upper <- NA
group1.median <- stats::median(group1[, yvar], na.rm = TRUE)
}
mean.diff <- group0.mean - group1.mean
median.diff <- group0.median - group1.median
stat <- rbind(stat, data.frame(Response = yvar.display, Predictor = xvar.display,
Direction = dir, Cutoff = cutoffs[i], Mean.Diff = mean.diff,
Mean.Diff.Lo = mean.diff.lo, Mean.Diff.Up = mean.diff.up,
ttest.pval = pval.t, Median.Diff = median.diff,
Group0.N = group0.N, Group0.Mean = group0.mean,
Group0.Mean.Lo = group0.lower, Group0.Mean.Up = group0.upper,
Group0.Median = group0.median,
Group1.N = group1.N, Group1.Mean = group1.mean,
Group1.Mean.Lo = group1.lower, Group1.Mean.Up = group1.upper,
Group1.Median = group1.median))
}
method="t.test"
stat.display <- stat
stat.display <- stat.display[, c("Response", "Predictor", "Direction", "Cutoff", "Group0.N", "Group1.N",
"Median.Diff", "Mean.Diff", "Mean.Diff.Lo", "Mean.Diff.Up", "ttest.pval")]
temp <- stat.display[, c("Median.Diff", "Mean.Diff", "Mean.Diff.Lo", "Mean.Diff.Up")]
stat.display[, c("Median.Diff", "Mean.Diff", "Mean.Diff.Lo", "Mean.Diff.Up")] <- round(temp, digits = 2)
stat.display$ttest.pval <- round(stat.display$ttest.pval, digits = 4)
stat.display$Mean.Diff.CI <- paste(stat.display$Mean.Diff, " (", stat.display$Mean.Diff.Lo, " , ",
stat.display$Mean.Diff.Up, ")", sep = "")
stat.display <- stat.display[, c("Response", "Predictor", "Direction", "Cutoff", "Group0.N", "Group1.N",
"Median.Diff", "Mean.Diff.CI", "ttest.pval")]
if (method == "t.test") {
stat.sel <- stat[which.min(stat$ttest.pval), ]
stat.sel.display <- stat.display[which.min(stat$ttest.pval), ]
}
cut.sel <- stat.sel$Cutoff
rownames(stat.sel) = NULL
rownames(stat.sel.display) = NULL
rownames(stat.display) = NULL
if (dir == "<") {
dir.else <- ">="
} else if (dir == "<=") {
dir.else <- ">"
} else if (dir == ">") {
dir.else <- "<="
} else if (dir == ">=") {
dir.else <- "<"
}
group0.res <- stat.sel[, c("Response", "Group0.N", "Group0.Mean", "Group0.Mean.Lo", "Group0.Mean.Up", "Group0.Median")]
group1.res <- stat.sel[, c("Response", "Group1.N", "Group1.Mean", "Group1.Mean.Lo", "Group1.Mean.Up", "Group1.Median")]
colnames(group0.res) <- c("Response", "N", "Mean", "Mean.Lo", "Mean.Up", "Median")
colnames(group1.res) <- c("Response", "N", "Mean", "Mean.Lo", "Mean.Up", "Median")
group.res <- rbind(group0.res, group1.res)
group.res
rownames(group.res)
data.plot0 <- stat[, c("Cutoff", "Group0.Mean", "Group0.Mean.Lo", "Group0.Mean.Up")]
data.plot0$Group <- paste(dir.else, "Cutoff")
colnames(data.plot0) <- c("Cutoff", "Mean", "Mean.Lo", "Mean.Up", "Group")
data.plot1 <- stat[, c("Cutoff", "Group1.Mean", "Group1.Mean.Lo", "Group1.Mean.Up")]
data.plot1$Group <- paste(dir, "Cutoff")
colnames(data.plot1) <- c("Cutoff", "Mean", "Mean.Lo", "Mean.Up", "Group")
data.plot <- rbind(data.plot0, data.plot1)
rownames(group.res)
row.names(group.res)
group.res
View(group0.res)
View(group0)
ttest <- try(stats::t.test(fml, data = data, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95), silent = TRUE)
ttest
fml <- stats::as.formula(paste(yvar, "~ Group"),, paired=FALSE)
ttest <- try(stats::t.test(fml, data = data, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95), silent = TRUE)
ttest
ttest <- try(stats::t.test(fml, data = data, alternative = "two.sided", mu = 0, var.equal = FALSE, conf.level = 0.95), silent = TRUE)
ttest
yvar.display='y.con'
xvar.display='biomarker x2'
yvar='y.con'
xvar="x2"
dir=">"
data=demo_data
Cutoff <- NULL
Mean <- NULL
Group <- NULL
Mean.Lo <- NULL
Mean.Up <- NULL
data <- data[, c(xvar, yvar)]
data <- data[stats::complete.cases(data),]
row.names(data)=NULL
cutoffs=c(-0.1,-0.3,-0.5,0.1,0.3,0.5)
if ("Group" %in% names(data)) stop("xvar and yvar should not have the name of Group.")
if (!dir %in% c(">", "<", ">=", "<=")) stop("dir should be >, <, >=, or <=")
cutoffs <- sort(unique(cutoffs))
stat <- NULL
for (i in seq_along(cutoffs)) {
if (dir == ">") {
data$Group <- (data[, xvar] > cutoffs[i]) * 1
} else if (dir == ">=") {
data$Group <- (data[, xvar] >= cutoffs[i]) * 1
} else if (dir == "<") {
data$Group <- (data[, xvar] < cutoffs[i]) * 1
} else if (dir == "<=") {
data$Group <- (data[, xvar] <= cutoffs[i]) * 1
}
fml <- stats::as.formula(paste(yvar, "~ Group"))
ttest <- try(stats::t.test(fml, data = data, alternative = "two.sided", mu = 0, var.equal = FALSE, conf.level = 0.95), silent = TRUE)
if (!inherits(ttest, "try-error")) {
print('yes')
pval.t <- ttest$p.value
mean.diff.lo <- ttest$conf.int[1]
mean.diff.up <- ttest$conf.int[2]
} else {
print('no')
pval.t <- NA
mean.diff.lo <- NA
mean.diff.up <- NA
}
group0 <- data[data$Group == 0, ]
group1 <- data[data$Group == 1, ]
group0.N <- nrow(group0)
group1.N <- nrow(group1)
group0.t <- try(stats::t.test(group0[, yvar], alternative = "two.sided", mu = 0, conf.level = 0.95), silent = TRUE)
group1.t <- try(stats::t.test(group1[, yvar], alternative = "two.sided", mu = 0, conf.level = 0.95), silent = TRUE)
if (!inherits(group0.t, "try-error")) {
group0.mean <- unname(group0.t$estimate)
group0.lower <- group0.t$conf.int[1]
group0.upper <- group0.t$conf.int[2]
group0.median <- stats::median(group0[, yvar])
} else {
group0.mean <- mean(group0[, yvar], na.rm = TRUE)
group0.lower <- NA
group0.upper <- NA
group0.median <- stats::median(group0[, yvar], na.rm = TRUE)
}
if (!inherits(group1.t, "try-error")) {
group1.mean <- unname(group1.t$estimate)
group1.lower <- group1.t$conf.int[1]
group1.upper <- group1.t$conf.int[2]
group1.median <- stats::median(group1[, yvar])
} else {
group1.mean <- mean(group1[, yvar], na.rm = TRUE)
group1.lower <- NA
group1.upper <- NA
group1.median <- stats::median(group1[, yvar], na.rm = TRUE)
}
mean.diff <- group0.mean - group1.mean
median.diff <- group0.median - group1.median
stat <- rbind(stat, data.frame(Response = yvar.display, Predictor = xvar.display,
Direction = dir, Cutoff = cutoffs[i], Mean.Diff = mean.diff,
Mean.Diff.Lo = mean.diff.lo, Mean.Diff.Up = mean.diff.up,
ttest.pval = pval.t, Median.Diff = median.diff,
Group0.N = group0.N, Group0.Mean = group0.mean,
Group0.Mean.Lo = group0.lower, Group0.Mean.Up = group0.upper,
Group0.Median = group0.median,
Group1.N = group1.N, Group1.Mean = group1.mean,
Group1.Mean.Lo = group1.lower, Group1.Mean.Up = group1.upper,
Group1.Median = group1.median))
}
method="t.test"
stat.display <- stat
stat.display <- stat.display[, c("Response", "Predictor", "Direction", "Cutoff", "Group0.N", "Group1.N",
"Median.Diff", "Mean.Diff", "Mean.Diff.Lo", "Mean.Diff.Up", "ttest.pval")]
temp <- stat.display[, c("Median.Diff", "Mean.Diff", "Mean.Diff.Lo", "Mean.Diff.Up")]
stat.display[, c("Median.Diff", "Mean.Diff", "Mean.Diff.Lo", "Mean.Diff.Up")] <- round(temp, digits = 2)
stat.display$ttest.pval <- round(stat.display$ttest.pval, digits = 4)
stat.display$Mean.Diff.CI <- paste(stat.display$Mean.Diff, " (", stat.display$Mean.Diff.Lo, " , ",
stat.display$Mean.Diff.Up, ")", sep = "")
stat.display <- stat.display[, c("Response", "Predictor", "Direction", "Cutoff", "Group0.N", "Group1.N",
"Median.Diff", "Mean.Diff.CI", "ttest.pval")]
if (method == "t.test") {
stat.sel <- stat[which.min(stat$ttest.pval), ]
stat.sel.display <- stat.display[which.min(stat$ttest.pval), ]
}
cut.sel <- stat.sel$Cutoff
rownames(stat.sel) = NULL
rownames(stat.sel.display) = NULL
rownames(stat.display) = NULL
if (dir == "<") {
dir.else <- ">="
} else if (dir == "<=") {
dir.else <- ">"
} else if (dir == ">") {
dir.else <- "<="
} else if (dir == ">=") {
dir.else <- "<"
}
group0.res <- stat.sel[, c("Response", "Group0.N", "Group0.Mean", "Group0.Mean.Lo", "Group0.Mean.Up", "Group0.Median")]
group1.res <- stat.sel[, c("Response", "Group1.N", "Group1.Mean", "Group1.Mean.Lo", "Group1.Mean.Up", "Group1.Median")]
colnames(group0.res) <- c("Response", "N", "Mean", "Mean.Lo", "Mean.Up", "Median")
colnames(group1.res) <- c("Response", "N", "Mean", "Mean.Lo", "Mean.Up", "Median")
group.res <- rbind(group0.res, group1.res)
row.names(group.res) <- c(paste(xvar.display, dir.else, cut.sel), paste(xvar.display, dir, cut.sel))
data.plot0 <- stat[, c("Cutoff", "Group0.Mean", "Group0.Mean.Lo", "Group0.Mean.Up")]
data.plot0$Group <- paste(dir.else, "Cutoff")
colnames(data.plot0) <- c("Cutoff", "Mean", "Mean.Lo", "Mean.Up", "Group")
data.plot1 <- stat[, c("Cutoff", "Group1.Mean", "Group1.Mean.Lo", "Group1.Mean.Up")]
data.plot1$Group <- paste(dir, "Cutoff")
colnames(data.plot1) <- c("Cutoff", "Mean", "Mean.Lo", "Mean.Up", "Group")
data.plot <- rbind(data.plot0, data.plot1)
View(group.res)
